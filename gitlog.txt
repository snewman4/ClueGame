Author: Sam Newman
Section: CSCI 306A
Before and After Refactoring my best code snippet:

BEFORE:
// Handle walkway adjacencies
if(cellType == 'W') {
	if((row - 1) >= 0) {
		BoardCell nextCell = board[row-1][column];
		Character nextCellType = nextCell.getInitial();
		if(nextCellType == 'W') {
			cell.addAdjecency(nextCell);
		}
	}
	if((row + 1) < numRows) {
		BoardCell nextCell = board[row+1][column];
		Character nextCellType = nextCell.getInitial();
		if(nextCellType == 'W') {
			cell.addAdjecency(nextCell);
		}
	}
	if((column - 1) >= 0) {
		BoardCell nextCell = board[row][column-1];
		Character nextCellType = nextCell.getInitial();
		if(nextCellType == 'W') {
			cell.addAdjecency(nextCell);
		}
	}
	if((column + 1) < numColumns) {
		BoardCell nextCell = board[row][column+1];
		Character nextCellType = nextCell.getInitial();
		if(nextCellType == 'W') {
			cell.addAdjecency(nextCell);
		}
	}
					
	// If the cell is a doorway, add the room as an adjacency
	if(cell.isDoorway()) {
		DoorDirection cellDirection = cell.getDoorDirection(); // See where door faces
		switch(cellDirection) {
			case UP:
				BoardCell nextCellUP = board[row-1][column]; // Directly adjacent cell
				Character nextCellTypeUP = nextCellUP.getInitial(); // Room type
				BoardCell roomCenterUP = roomMap.get(nextCellTypeUP).getCenterCell(); // Room's center
				cell.addAdjecency(roomCenterUP);
				roomCenterUP.addAdjecency(cell); // Update the room's adjacency to include the cell with the door
				break;
			case DOWN:
				BoardCell nextCellDOWN = board[row+1][column]; // Directly adjacent cell
				Character nextCellTypeDOWN = nextCellDOWN.getInitial(); // Room type
				BoardCell roomCenterDOWN = roomMap.get(nextCellTypeDOWN).getCenterCell(); // Room's center
				cell.addAdjecency(roomCenterDOWN);
				roomCenterDOWN.addAdjecency(cell); // Update the room's adjacency to include the cell with the door
				break;
			case RIGHT:
				BoardCell nextCellRIGHT = board[row][column+1]; // Directly adjacent cell
				Character nextCellTypeRIGHT = nextCellRIGHT.getInitial(); // Room type
				BoardCell roomCenterRIGHT = roomMap.get(nextCellTypeRIGHT).getCenterCell(); // Room's center
				cell.addAdjecency(roomCenterRIGHT);
				roomCenterRIGHT.addAdjecency(cell); // Update the room's adjacency to include the cell with the door
				break;
			case LEFT:
				BoardCell nextCellLEFT = board[row][column-1]; // Directly adjacent cell
				Character nextCellTypeLEFT = nextCellLEFT.getInitial(); // Room type
				BoardCell roomCenterLEFT = roomMap.get(nextCellTypeLEFT).getCenterCell(); // Room's center
				cell.addAdjecency(roomCenterLEFT);
				roomCenterLEFT.addAdjecency(cell); // Update the room's adjacency to include the cell with the door
				break;
		}
	}
}

AFTER:
	// Handle walkway adjacencies
	if(cellType == 'W') {
		if((row - 1) >= 0) {
			addWalkwayAdjacency(row - 1, column, cell);
		}
		if((row + 1) < numRows) {
			addWalkwayAdjacency(row + 1, column, cell);
		}
		if((column - 1) >= 0) {
			addWalkwayAdjacency(row, column - 1, cell);
		}
		if((column + 1) < numColumns) {
			addWalkwayAdjacency(row, column + 1, cell);
		}
					
		// If the cell is a doorway, add the room as an adjacency
		if(cell.isDoorway()) {
			DoorDirection cellDirection = cell.getDoorDirection(); // See where door faces
			switch(cellDirection) {
				case UP:
					addDoorAdjacency(row - 1, column, cell);
					break;
				case DOWN:
					addDoorAdjacency(row + 1, column, cell);
					break;
				case RIGHT:
					addDoorAdjacency(row, column + 1, cell);
					break;
				case LEFT:
					addDoorAdjacency(row, column - 1, cell);
					break;
				default: break;
			}
		}
	}

	// Method to set up adjacencies for walkways
	private void addWalkwayAdjacency(int row, int column, BoardCell cell) {
		BoardCell nextCell = gameBoard[row][column];
		Character nextCellType = nextCell.getInitial();
		if(nextCellType == 'W') {
			cell.addAdjecency(nextCell);
		}
	}

	// Method to set up adjacencies when there is a door
	private void addDoorAdjacency(int row, int column, BoardCell cell) {
		BoardCell nextCell = gameBoard[row][column]; // Directly adjacent cell
		Character nextCellType = nextCell.getInitial(); // Room type
		BoardCell roomCenter = roomMap.get(nextCellType).getCenterCell(); // Room's center
		cell.addAdjecency(roomCenter);
		roomCenter.addAdjecency(cell); // Update the room's adjacency to include the cell with the door
	}

Git Log:

commit 38553936836801dac96b14b0affad336a4b2d7fa
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 26 16:28:05 2021 -0600

    Updated minor things like declarations according to SonarLint recs

commit 0fa031f8a79fed4568a669ac8f74430056ef1376
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 26 16:20:18 2021 -0600

    Updated Board class with minor recommendations from SonarLint

commit 8cfde717934134c072c56994ea0ebf3f7682c918
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 12 13:29:28 2021 -0600

    Refactored. Created addDoorAdjacency and addWalkwayAdjacency methods to Board

commit 199c1ab5a176c0b74166e326cff1be4e98285488
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 12 13:15:33 2021 -0600

    Fixed final test to check for correct number of targets. Target tests pass.

commit 09052c78084b0219498c18fbc03f0d68eb364819
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 12 12:12:00 2021 -0600

    Began target calculations

commit d9d921442a6c2f0c2c9aebee442532832f29dcdc
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 12 11:47:06 2021 -0600

    Updated adjacency creation for doors and passages. AdjTests pass.

commit 8f0d2245b3681779d24456fbcd94c261f1133c42
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 12 11:19:37 2021 -0600

    Implemented adjacency creation for walkways

commit 2e809e79d56da2c6ec5bdb24e3deaf0b0e024b4a
Author: Sam Newman <snewman1@mines.edu>
Date:   Fri Oct 8 15:35:41 2021 -0600

    Created failing tests for adjacency and target creation

commit ee900520ae9d25e3ebd0af840d6ddd676fc066d8
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Oct 7 14:15:29 2021 -0600

    Refactored Board class to be slightly cleaner

commit 6c689ffbc922b2dc7530d5e236ca20dbb3b071aa
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Oct 7 14:07:47 2021 -0600

    Added BadConfigFormatException to handle bad formats

commit 643586c849852c81e8c3e66335ae4f82f643ddbe
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Oct 7 13:27:30 2021 -0600

    Updated loadLayoutConfig() to properly set up the board. FileInitTests now pass

commit bb86157e0ab82914930400e7286ec232e810806c
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Oct 7 12:08:23 2021 -0600

    Implemented loadSetupConfig(), began work on loadLayoutConfig()

commit 40d2f3c23fc73d4f65767ce7663546142f1f8b92
Author: Sam Newman <snewman1@mines.edu>
Date:   Wed Oct 6 20:46:42 2021 -0600

    Renamed Tests.txt -> Test.txt

commit 033e996180717577e6c5c5889c4bb0fa7221f63b
Author: Sam Newman <snewman1@mines.edu>
Date:   Wed Oct 6 20:44:45 2021 -0600

    Updated all classes to make tests fail instead of error

commit 35fa79da08c7352f33e6cc7dfd1e283e9a0d2f3e
Author: Sam Newman <snewman1@mines.edu>
Date:   Wed Oct 6 18:51:33 2021 -0600

    Updated Board and BoardCell getters and setters for better readability

commit 9d1654e168595ecc095401d5ea46a71b1ce113be
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 5 17:43:51 2021 -0600

    Added many, many setters and getters

commit edd011c0a2c75f741652d43044fcfac12cbc93f3
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 5 12:09:19 2021 -0600

    Created classes for gameplay

commit b82d24ae6672bd53502bc17b2b8f4bc886a16a3c
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 5 11:49:09 2021 -0600

    Added data files and provided test files

commit e6464ce891cedebb6b862ffbe5fa91fa7d0054c3
Author: Sam Newman <snewman1@mines.edu>
Date:   Tue Oct 5 11:33:13 2021 -0600

    Updated movement algorithm to account for rooms and occupied. Passes all tests.

commit 1b448f4662ea8dab65262af148d578747d77a7e7
Author: Sam Newman <snewman1@mines.edu>
Date:   Mon Oct 4 21:02:00 2021 -0600

    Implemented basic target finding algorithm, assuming no rooms or occupieds

commit cdb81688d47e9def8c568fcbc25e1166b1c239ea
Author: Sam Newman <snewman1@mines.edu>
Date:   Mon Oct 4 20:42:55 2021 -0600

    Added calculations for adjList to Board Constructor

commit 2c4140614cf90b6c83278994bc77622e169d26a9
Author: Sam Newman <snewman1@mines.edu>
Date:   Sun Oct 3 10:07:29 2021 -0600

    Initialized sets in constructors to stop errors, get failures instead

commit d30facfc2a3e5027f995be5395120acc246205a8
Author: Sam Newman <snewman1@mines.edu>
Date:   Sun Oct 3 09:59:42 2021 -0600

    Added two tests for just rooms and just occupied

commit 85477f3f556d6154f03c406d3ae36808123d5cca
Author: Sam Newman <snewman1@mines.edu>
Date:   Sun Oct 3 09:28:16 2021 -0600

    Added test cases for occupied spaces

commit b50a4903bc8122da970edb488a6afaa1a65c0890
Author: Sam Newman <snewman1@mines.edu>
Date:   Sat Oct 2 16:11:41 2021 -0600

    Added adjacency test cases, began target test cases

commit 49ec324921131cc0267af61922406a0d80ce3185
Author: Sam Newman <snewman1@mines.edu>
Date:   Sat Oct 2 15:11:37 2021 -0600

    Added TestBoardCell, TestBoard, and BoardTestsExp skeletons

commit 05d18beef2ec0d38a00618589bbbd2eefc5e6ca4
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Sep 30 11:59:50 2021 -0600

    Added ClueSetup.txt

commit 13a1a92179b6f386823e435b5a0c2818ecadb73c
Author: Sam Newman <snewman1@mines.edu>
Date:   Thu Sep 30 10:58:06 2021 -0600

    Initial Commit

commit 5c3e241b0f12a85b1bb07f329a177ea6f77b1e17
Author: snewman4 <90208190+snewman4@users.noreply.github.com>
Date:   Thu Sep 30 10:51:49 2021 -0600

    Initial commit
